Міністерство освіти і науки України
Харківський національний університет радіоелектроніки




Кафедра Програмної інженерії






Звіт
З лабораторної роботи №4
з дисципліни «Скриптові мови програмування»
на тему: «Розробка консольного веб застосунку з використанням php»
















Виконала                                                                             Перевірив
ст.гр ПЗПІ-23-3                                                        ст. в. Сокорчук І.П.
Коваленко В.О.










Харків 2025
1 ІСТОРІЯ ЗМІН
№
	Дата
	Версія звіту
	Опис змін та виправлень
	1
	20.05.2025
	       0.1
	Додано розділ “Завдання” та “Опис виконаної роботи”
	2
	23.05.2025
	28.  0.2
	Додано підрозділ “Хід роботи”
	3
	24.05.2025
	2.1  0.3
	Додано підрозділ “Тестування веб застосунку”
	4
	24.05.2025
	12.10.4
	Додано розділ “Висновки”
	5
	25.05.2025
	10.10.5
	Додано “Додаток А”, “Додаток Б”, “Додаток В”
	2 ЗАВДАННЯ
2.1 Постановка завдання
Використовуючи матеріал попередніх лабораторних робіт, потрібно додати такий функціонал: 
1. Прибрати дублювання шапки і підвалу сайту (якщо воно є). 
2. Додати сторінку логіна. Обмежити доступ до сайту не залогіненим користувачам. 
3. Додати сторінку профілю з можливістю завантажити фото.
2.2 Вимоги до скрипта
Вимоги до веб-застосунку, які потрібні для коректної роботи всіх функцій та скриптів:
2.2.1 Система авторизації:
* Наявність сторінки логіну з формою для введення логіну та паролю
* Зберігання даних користувача в файлі credential.php
* Використання сесій для зберігання інформації про авторизованого користувача
* Відображення пункту меню "Login" для неавторизованих користувачів
* Відображення пункту меню "Logout" для авторизованих користувачів
* Можливість виходу з системи (очищення сесії)
2.2.2 Обмеження доступу:
* Блокування доступу до контенту для неавторизованих користувачів
* Перенаправлення на сторінку 404 з повідомленням про необхідність авторизації
* Відображення сторінки логіну при спробі доступу до захищених сторінок
2.2.3 Профіль користувача:
* Можливість перегляду та редагування інформації про користувача
* Форма з полями для введення: ім'я, прізвище, дата народження, стисла інформація про користувача, фото користувача
* Валідація даних: перевірка на порожні поля, ім'я та прізвище - рядок довжиною більше 1 символу, вік користувача не менше 16 років, стисла інформація - не менше 50 символів, перевірка типу та наявності завантаженого фото
________________


3 ОПИС ВИКОНАНОЇ РОБОТИ 
3.1 Хід роботи
Під час виконання лабораторної роботи №4 ми будемо удосконалювати код, написаний під час лабораторної роботи №3. Ми додамо сторінку логіна, обмежимо доступ до сайту не залогіненим користувачам, і також додамо сторінку профілю з можливістю завантажити фото.
3.1.1 Створення логіки логіну користувача у файлі Login
Нам потрібно реалізувати форму для входу користувача з перевіркою логіна та пароля. Для цього ми за допомогою функції include, зчитуємо файл credential.php, що містить облікові дані, а саме логін і пароль. Цей файл повертає масив, в якому зберігаються значення для логіну і пароля (див. Додаток В, В1). 
Наступним кроком ми перевіряємо, чи був надісланий POST-запит, який здійснюється через конструкцію if ($_SERVER['REQUEST_METHOD'] === 'POST'). Якщо форма була відправлена, код переходить до обробки введених даних. Тобто скрипт перевіряє, чи не є порожніми поля "ім'я користувача" та "пароль". Якщо хоча б одне з полів порожнє, виводиться повідомлення про помилку: "Всі поля обов'язкові!". Якщо ж користувач вводить правильний логін та пароль (тобто вони співпадають з даними, що зберігаються в файлі credential.php), користувач вважається авторизованим.
        Далі ми авторизуємо користувача, тобто якщо логін та пароль правильні, скрипт записує ім'я користувача в сесію, щоб можна було здійснювати подальші запити на авторизовану сторінку без введення кожного разу логіну та паролю. Якщо логін або пароль введені неправильно, користувач отримує повідомлення про помилку: "Невірний логін або пароль!".
3.1.2 Створення логіки виходу користувача із системи у файлі Logout
Нам необхідно реалізувати процес виходу користувача з системи (див. Додаток В, В2). Для цього ми спочатку викликаємо функцію session_start(), це робиться для того, щоб отримати доступ до існуючої сесії, оскільки ми не можемо видалити сесію, якщо її не було ініціалізовано. Далі ми викликаємо функцію session_unset(), яка забезпечує нам  видалення всіх змінних в сесії, але сама сесія залишається активною. І останнім кроком ми повністю знищуємо сесію, включаючи всі дані на ідентифікатор сесії завдяки функції session_destroy(). Отже, таким чином ми забезпечуємо повне очищення та видалення сесії.
3.1.3 Створення логіки налагодження профілю користувача
Нам необхідно створити сторінку профілю користувача, на якій користувач зміг би редагувати свої особисті дані, наприклад ім'я, прізвище, дату народження, фото та іншу інформацію.
 Також у користувача має бути можливість редагувати своє ім'я, прізвище, дату народження та стисле описання про себе в полях форми. Фото можна змінити, завантаживши новий файл. Після заповнення форми та натискання на кнопку "Зберегти" дані будуть відправлені назад на сервер для обробки.
        Отже, спочатку перевіряємо, чи є користувач у сесії, тобто чи виконав він процес авторизації. Якщо ні - то користувача слід перенаправити на сторінку page404.php. для авторизації.
        Якщо користувач успішнно залогінився ми можемо переходити до наступної частини, а саме до перевірки чи була надіслана форма. Якщо форма була надіслана через метод POST, то починаємо перевіряти дані:
   * Ім'я та прізвище мають бути довжиною не менше 2 символів.
   * Дата народження має бути такою, що користувач не молодший за 16 років.
   * Поле "Стисла інформація" повинно містити хоча б 50 символів.
Також ми перевіряємо чи завантажив користувач фото, і якщо завантажив, то перевіряємо на відповідність форматам JPEG, PNG або GIF. Якщо все в порядку, фото завантажується в директорію для зберігання зображень
Наступним кроком ми обробляємо можливі помилки, тобто якщо при перевірці введених даних виникли помилки (наприклад, невірно заповнені поля), то користувач бачить список помилок на сторінці. Якщо помилок немає, дані профілю записуються у файл profile.php, і виводиться повідомлення про успішне збереження даних.
3.1.4 Створення сторінки  з повідомленням про заборону доступу до контенту 
Для того аби повідомити користувача, що він є незалогіненим у систему, кожен раз коли він намагається зайти на сторінки, які потребують логіну, користувача перенаправляють на сторінку page404.php, яка повідомляє про необхідній залогінитися у систему. На цій сторінці міститься відповідне повідомлення, а також посилання на сторінку логіну. Таким чином ми не тільки забороняємо користувачеві доступ до системи, а ще й вказуємо посилання, де в цю систему можна зайти(див. Додаток В, В4)
3.2.1 Тестування веб-застосунку
Після того, як ми розробили веб застосунок, нам необхідно впевнитися, що працюють всі необхідні обмеження, а також доданий новий функціонал. Для цього ми запускаємо нашу систему на локальному комп’ютері, використовуючи команду php -S localhost:8000
3.2.2 Тестування логіки доступу та сторінки page404.php
При першому вході в систему, користувач не може отримати доступ до сторінок сайту, оскільки є неавторизованим. У додатку Б, Б1, продемонстроване графічне зображення, у якому знаходиться сторінка page404, яка вказує на те,  що наша логіка заборони доступу до контенту системи для неавторизованих користувачів працює правильно.
3.2.3 Тестування авторизації користувача на сторінці Login.php
Коли користувач переходить на сторінку авторизації, то у нього запитується ім’я користувача та пароль. У додатку Б, Б2, продемонстроване графічне зображення, у якому знаходиться форма для заповнення і подальшої авторизації. після її підтвердження користувачеві стає доступним контент застосунку.
3.2.4 Тестування профілю користувача 
Після того, як користувач авторизувався в системі у нього є можливість налаштувати свій профіль на відповідній сторінці профілю. Користувач вписує свої дані, такі як ім’я,дату народження, опис та своє зображення і натискає кнопку “Зберегти”. Після цього на екрані виводиться відповідне сповіщення про успішне збереження даних. У додатку Б, Б3 продемонстроване графічне зображення налаштованою сторінки профілю. 
3.2.5 Результати тестування програми
В ході тестування нашого веб застосунку ми виявили, що програма працює згідно з встановлених вимог і є повністю рабочою
________________


ВИСНОВКИ
У ході виконання лабораторної роботи №4 була реалізована можливість авторизації користувачів, заборона доступу до системи за відсутності авторизації, сторінка профілю з можливістю заповнення необхідних особистих даних та завантаження фотографії, а також покращена структура сайту шляхом винесення хедера та футера в окремі файли для уникнення дублювання коду. В процесі роботи були набуті практичні навички роботи з сесіями, формами та обробкою файлів у PHP.
________________
ДОДАТОК А
Відеозапис
Відеозапис презентації результатів лабораторної роботи: https://youtu.be/c5OaSsDfgC8
Хронологічний опис відеозапису:
00:00 – Представлення
00:39 – Тестування застосунку
03:03 – Розбір коду у файлі Login.php, який призначений для авторизації користувача
05:30 – Розбір коду у файлі Logout.php, який признечений для виходу користувача із системи
06:33 – Розбір коду у файлі Profile_form.php, який призначений для налаштування та заповнення профілю користувача
07:15 – Сторінка page404.php
13:11 – Налаштування структури проекту, шляхом винесення footer та header в окремі файли
14:02 – Робір коду у файлі Profile.php
________________


ДОДАТОК Б
Графічні матеріали
  

Рисунок Б.1 —Сторінка page404.php - заборона доступу до контенту веб застосунку
  

Рисунок Б.2 —Сторінка входу Login.php для авторизації користувача
  

Рисунок Б.3 —Сторінка профілю користувача з можливістю налагодження
________________


ДОДАТОК В
Програмний код
В.1 Логіка логіну користувача у файлі Login.php
GitHub репозиторій: https://github.com/NureKovalenkoVioletta/smp-pzpi-23-3-kovalenko-violetta/blob/main/Lab4/smp-pzpi-23-3-kovalenko-violetta-lab4/webshop/public/login.php
  1 <?php
  2 require_once 'includes/header.php';
  3
  4 $cred = include 'credential.php';
  5 $error = '';
  6
  7 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  8     $user = trim($_POST['username'] ?? '');
  9     $pass = $_POST['password'] ?? '';
 10     if ($user === '' || $pass === '') {
 11         $error = 'Всі поля обов\'язкові!';
 12     } elseif ($user === $cred['userName'] && $pass === $cred['password']) {
 13         $_SESSION['user'] = $user;
 14         $_SESSION['login_time'] = date('Y-m-d H:i:s');
 15         header('Location: /index.php');
 16         exit;
 17     } else {
 18         $error = 'Невірний логін або пароль!';
 19     }
 20 }
 21 ?>
 22 <div style="max-width:400px;margin:2em auto;padding:2em;background:#fff;border-radius:8px;box-shadow:0 2px 8px #ccc;">
 23     <h2>Вхід</h2>
 24     <?php if ($error): ?><div class="error" style="margin-bottom:1em;"> <?= htmlspecialchars($error) ?> </div><?php endif; ?>
 25     <form method="post">
 26         <label>Ім'я користувача:<br><input type="text" name="username" required style="width:100%"></label><br><br>
 27         <label>Пароль:<br><input type="password" name="password" required style="width:100%"></label><br><br>
 28         <button type="submit">Login</button>
 29     </form>
 30 </div>
 31 <?php require_once 'includes/footer.php'; ?>


В.2 Логіка виходу  користувача із системи у файлі Logout.php
GitHub репозиторій: https://github.com/NureKovalenkoVioletta/smp-pzpi-23-3-kovalenko-violetta/blob/main/Lab4/smp-pzpi-23-3-kovalenko-violetta-lab4/webshop/public/logout.php
1 <?php
2 session_start();
3 session_unset();
4 session_destroy();
5 header('Location: /login.php');
6 exit;
В.3 Логіка  налагодження профілю користувача та відправка форми на сервер
GitHub репозиторій: https://github.com/NureKovalenkoVioletta/smp-pzpi-23-3-kovalenko-violetta/blob/main/Lab4/smp-pzpi-23-3-kovalenko-violetta-lab4/webshop/public/profile_form.php
  1 <?php
  2 require_once 'includes/header.php';
  3 if (empty($_SESSION['user'])) {
  4     header('Location: /page404.php');
  5     exit;
  6 }
  7
  8 $user = include 'profile.php';
  9
 10 function getAge($dob) {
 11     $today = new DateTime();
 12     $birthdate = new DateTime($dob);
 13     $age = $today->diff($birthdate)->y;
 14     return $age;
 15 }
 16
 17 $errors = [];
 18 $success = '';
 19 $showSaveButton = false;
 20
 21 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
 22     $name = trim($_POST['name'] ?? '');
 23     $surname = trim($_POST['surname'] ?? '');
 24     $dob = $_POST['dob'] ?? '';
 25     $about = trim($_POST['about'] ?? '');
 26     $photo = $user['photo'];
 27
 28     if (!$name || strlen($name) < 2) $errors[] = "Ім'я має містити більше 1 символу.";
 29     if (!$surname || strlen($surname) < 2) $errors[] = "Прізвище має містити більше 1 символу.";
 30     if (!$dob || getAge($dob) < 16) $errors[] = "Вам має бути не менше 16 років.";
 31     if (!$about || strlen($about) < 50) $errors[] = "Стисла інформація має містити не менше 50 символів.";
 32
 33     if (isset($_FILES['photo']) && $_FILES['photo']['error'] === UPLOAD_ERR_OK) {
 34         $allowed = ['image/jpeg', 'image/png', 'image/gif'];
 35         if (!in_array($_FILES['photo']['type'], $allowed)) {
 36             $errors[] = "Фото має бути у форматі JPG, PNG або GIF.";
 37         } else {
 38             $ext = pathinfo($_FILES['photo']['name'], PATHINFO_EXTENSION);
 39             $filename = 'assets/images/profile_' . uniqid() . '.' . $ext;
 40             if (move_uploaded_file($_FILES['photo']['tmp_name'], __DIR__ . '/' . $filename)) {
 41                 $photo = '/' . $filename;
 42             } else {
 43                 $errors[] = "Не вдалося завантажити фото.";
 44             }
 45         }
 46     }
 47
 48     if (!$errors) {
 49         $data = [
 50             'name' => $name,
 51             'surname' => $surname,
 52             'dob' => $dob,
 53             'about' => $about,
 54             'photo' => $photo
 55         ];
 56         file_put_contents('profile.php', "<?php\nreturn " . var_export($data, true) . ";\n");
 57         $user = $data;
 58         $success = "Дані збережено!";
 59         $showSaveButton = false;
 60     } else {
 61         $showSaveButton = true;
 62     }
 63 }
 64
 65 if ($_SERVER['REQUEST_METHOD'] === 'GET') {
 66     $showSaveButton = false;
 67 }
 68 ?>
 69
 70 <h2 style="text-align: center;">Профіль користувача</h2>
 71
 72 <?php if ($errors): ?>
 73     <ul class="error">
 74         <?php foreach ($errors as $e) echo "<li>$e</li>"; ?>
 75     </ul>
 76 <?php endif; ?>
 77
 78 <?php if ($success): ?>
 79     <div class="success" style="color:green; margin-bottom:1em; padding: 10px; background-color: #e8f5e9; border-radius: 4px; border: 1px solid #c8e6c9;">
 80         <strong>✓</strong> <?= $success ?>
 81     </div>
 82 <?php endif; ?>
 83
 84 <form method="post" enctype="multipart/form-data" style="max-width:600px; margin:auto; background:#fff; padding:2em; border-radius:8px; box-shadow:0 2px 8px #ccc;">
 85     <div style="display:flex; gap:2em; align-items:flex-start;">
 86         <div>
 87             <img src="<?= htmlspecialchars($user['photo']) ?>" alt="Фото профілю" style="width:150px; height:150px; object-fit:cover; border-radius:8px; border:1px solid #ccc; background:#eee;">
 88             <br><br>
 89             <input type="file" name="photo" accept="image/*">
 90         </div>
 91         <div style="flex:1;">
 92             <label>Ім'я:<br><input type="text" name="name" value="<?= htmlspecialchars($user['name']) ?>" required style="width:100%;"></label><br><br>
 93             <label>Прізвище:<br><input type="text" name="surname" value="<?= htmlspecialchars($user['surname']) ?>" required style="width:100%;"></label><br><br>
 94             <label>Дата народження:<br><input type="date" name="dob" value="<?= htmlspecialchars($user['dob']) ?>" required style="width:100%;"></label><br><br>
 95             <label>Стисла інформація:<br><textarea name="about" required style="width:100%;height:80px;"><?= htmlspecialchars($user['about']) ?></textarea></label><br><br>
 96             <button type="submit">Зберегти</button>
 97         </div>
 98     </div>
 99 </form>
100
101 <?php require_once 'includes/footer.php'; ?>
В.4 Код із вмістом сторінки page.php
GitHub репозиторій: 
https://github.com/NureKovalenkoVioletta/smp-pzpi-23-3-kovalenko-violetta/blob/main/Lab4/smp-pzpi-23-3-kovalenko-violetta-lab4/webshop/public/page404.php
  1 <?php
  2 require_once 'includes/header.php';
  3 ?>
  4 <div style="max-width:600px;margin:2em auto;padding:2em;background:#fff;border-radius:8px;box-shadow:0 2px 8px #ccc;text-align:center;">
  5     <h2>Доступ заборонено</h2>
  6     <p>Для перегляду контенту сайту, необхідно <a href="/login.php">авторизуватися</a>.</p>
  7 </div>
  8 <?php require_once 'includes/footer.php'; ?>